{"version":3,"sources":["Components/imageGallery/imageGalleryItem/ImageGalleryItem.js","Components/imageGallery/ImageGallery.js","Components/searchbar/Searchbar.js","Components/button/Button.js","Components/loader/Loader.js","Components/modal/Modal.js","utils/api.js","App/App.js","index.js"],"names":["ImageGalleryItem","smallImage","alt","onClick","id","bigImage","className","src","ImageGallery","images","map","image","key","Searchbar","onSubmit","type","autocomplete","autofocus","placeholder","Button","onMore","Loader","color","height","width","Modal","onClose","useEffect","_handleEscKey","keyCode","document","addEventListener","removeEventListener","e","target","attributes","class","getData","query","page","per_page","a","axios","_INITIAL_STATE_","maxPages","isLoadButton","isLoading","modal","afterScroll","App","useState","state","setState","downImages","PER_PAGE","data","total","Math","ceil","totalHits","hits","srcImg","webformatURL","largeImageURL","tags","toString","window","scrollTo","top","documentElement","scrollHeight","behavior","preventDefault","value","trim","replaceAll","dataset","bigimage","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4180277b.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ImageGalleryItem({smallImage, alt, id, onClick, bigImage}) {\n    return (\n        <li className=\"ImageGalleryItem\">\n          <img src={smallImage} alt={alt} data-bigimage={bigImage} data-alt={alt} onClick={onClick} className=\"ImageGalleryItem-image\" />\n        </li>\n    )\n}\n\nImageGalleryItem.propTypes = {\n    smallImage:PropTypes.string.isRequired,\n    bigImage: PropTypes.string.isRequired,\n    alt:PropTypes.string.isRequired,\n    id:PropTypes.string.isRequired,\n    onClick:PropTypes.func.isRequired,\n}\n\nexport default ImageGalleryItem\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ImageGalleryItem from './imageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({images,onClick}) {\n    return (\n        <ul className=\"ImageGallery\">\n          {images.map(image=>(\n              <ImageGalleryItem {...image} onClick={onClick} key={image.id}/>\n          ))}\n        </ul>\n    )\n}\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.shape({\n        smallImage:PropTypes.string.isRequired,\n        alt:PropTypes.string.isRequired,\n        id:PropTypes.string.isRequired,\n    })).isRequired,\n    onClick:PropTypes.func.isRequired,\n}\n\nexport default ImageGallery\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Searchbar({onSubmit}) {\n    return (\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={onSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autocomplete=\"off\"\n              autofocus\n              placeholder=\"Search images and photos\"\n            />\n          </form>\n        </header>\n    )\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Searchbar\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Button({onMore}) {\n    return (\n        <button className=\"Button\" onClick={onMore}>\n            Load MORE...\n        </button>\n    )\n}\n\nButton.propTypes = {\n    onMore: PropTypes.func.isRequired,\n}\n\nexport default Button\n\n","import React from 'react'\nimport Spinner from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nfunction Loader() {\n    return (\n        <Spinner\n        type=\"Hearts\"\n        color=\"#e63964\"\n        height={100}\n        width={100}\n      />\n    )\n}\nexport default Loader\n\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Modal=({onClose, image})=>{   \n\n    useEffect(()=>{        \n        const _handleEscKey=({keyCode})=>{\n            if(keyCode === 27) onClose()\n        }\n\n        document.addEventListener(\"keydown\", _handleEscKey, false);\n\n        return document.removeEventListener(\"keydown\", _handleEscKey, false);\n    },[])\n\n    const handleClick=(e)=>{\n        if(e.target.attributes.class) onClose()\n    }\n\n    return (\n            <div className=\"Overlay\" onClick={handleClick}>\n              <div className=\"Modal\">\n                <img src={image.bigImage} alt={image.alt} />\n              </div>\n            </div>\n    )\n}\n\nModal.propTypes={\n    image: PropTypes.shape({\n    bigImage: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n}).isRequired,\nonClose: PropTypes.func.isRequired,\n}\n\nexport default Modal\n","import axios from 'axios'\n\nconst TOKEN=\"21059964-5bf790d712106238e57c2f022\"\nconst URL=\"https://pixabay.com/api/\"\n\nconst getData= async (query,page,per_page)=>await axios(`${URL}?key=${TOKEN}&q=${query}&per_page=${per_page}&page=${page}`)\n\nexport default getData","import React, { useState, useEffect} from 'react'\nimport ImageGallery from '../Components/imageGallery/ImageGallery';\nimport Searchbar from '../Components/searchbar/Searchbar';\nimport Button from '../Components/button/Button';\nimport Loader from '../Components/loader/Loader';\nimport Modal from '../Components/modal/Modal'\nimport getData from '../utils/api'\n\nconst _INITIAL_STATE_={\n    images:[],\n    page:0,\n    query:\"\",\n    maxPages:0,\n    isLoadButton:false,\n    isLoading:false,\n    modal:null,\n    afterScroll:false\n}\n\nconst App=()=>{   \n    \n    const [state, setState] = useState(_INITIAL_STATE_)\n\n    const closeModal=()=>{\n        setState(state=>({...state, modal:null}))\n    }    \n\n    const handelSubmit=(e)=>{\n        e.preventDefault()\n        setState(state=>({..._INITIAL_STATE_, query:e.target[1].value.trim().replaceAll(\" \",\"+\"),isLoading:true}))        \n    }\n\n    const handelCicks=({target:{dataset:{bigimage:bigImage,alt}}})=>{\n        setState(state=>({...state, modal:{bigImage,alt}}))\n    }\n\n    const downImages=async()=>{\n        if(state.query===\"\"){\n            setState(state=>({...state, isLoading:false}))\n            return\n        }\n        \n        const PER_PAGE=12\n\n        let page=state.page\n        if(state.maxPages===0 || page<state.maxPages){\n            page=state.page+1\n        }else{\n            setState(state=>({...state, isLoading:false,isLoadButton:false}))\n            return\n        }\n\n        try{\n            const {data}=await getData(state.query,page,PER_PAGE)\n            \n            let maxPages=0\n            let images=[]\n\n            if(data.total!==0) {\n                maxPages=Math.ceil(data.totalHits/PER_PAGE)\n                images=data.hits.map(srcImg=>({\n                    smallImage:srcImg.webformatURL,\n                    bigImage:srcImg.largeImageURL,\n                    alt:srcImg.tags,\n                    id:srcImg.id.toString(),\n                    }))\n            }\n\n            setState(state=>({...state, images:[...state.images,...images],maxPages,page,isLoading:false,isLoadButton:page<maxPages}))\n        }catch(error){\n            setState(state=>({...state, isLoading:false,isLoadButton:false}))\n        }\n    }\n\n    useEffect(() => {\n        const scrollUp=()=>{\n            window.scrollTo({\n                top: document.documentElement.scrollHeight,\n                behavior: 'smooth',\n            });\n        }\n\n        if(state.isLoading) downImages()\n        else if(state.afterScroll) {\n            scrollUp()\n            setState(state=>({...state,afterScroll:false}))\n        }\n    }, [state])\n\n    const moreImages=()=> setState(state=>({...state,isLoading:true,afterScroll:true}))\n\n    return (\n            <div className=\"App\">\n                {state.modal && <Modal image={state.modal} onClose={closeModal} />}\n                <Searchbar onSubmit={handelSubmit}/>\n                <ImageGallery images={state.images} onClick={handelCicks}/>\n                {state.isLoading && <Loader/>}\n                {state.isLoadButton && <Button onMore={moreImages}/>}\n            </div>\n    )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport './globalStyles.css';\nimport App from './App/App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}